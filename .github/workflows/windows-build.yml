# .github/workflows/windows-build.yml
name: Build Servo on Windows x64

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-windows:
    name: Build Servo (Windows x64)
    runs-on: windows-latest

    env:
      RUSTUP_TOOLCHAIN_FILE: rust-toolchain

    steps:
      - name: üõéÔ∏è Checkout source
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: üì¶ Cache Cargo registry & git index
        uses: actions/cache@v3
        id: cargo-cache
        with:
          path:
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: ‚öôÔ∏è Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          override: true
          components: rustfmt, clippy

      - name: üêç Install Python (for mach)
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: ‚ú® Setup Python Virtual Environment and Install uv
        run: |
          # Install pip and virtualenv
          python -m pip install --upgrade pip virtualenv
          # Create the virtual environment
          python -m virtualenv .venv
          # Activate the virtual environment for this specific run block
          .venv\Scripts\activate
          # Install uv within the virtual environment
          pip install uv
        shell: powershell # Use PowerShell as the default shell for this step

      - name: üîß Add venv Scripts to PATH
        # This ensures the virtual environment's executables (including uv if installed there)
        # are available to subsequent steps.
        run: |
          $env:Path += ";${{ github.workspace }}\.venv\Scripts"
          echo "C:\a\servo\.venv\Scripts" | Out-File -FilePath $env:GITHUB_PATH -Encoding Utf8 -Append
        shell: pwsh # Use PowerShell for this specific step to correctly add to GITHUB_PATH

      - name: ‚ö° Bootstrap Servo build system
        # mach.bat should now find 'uv' because its location is on the PATH
        run: .\mach.bat bootstrap

      - name: üèóÔ∏è Build Servo (Release)
        run: .\mach.bat build --release

      - name: üì§ Upload Release Binaries
        uses: actions/upload-artifact@v4
        with:
          name: servo-windows-x64
          path: |
            ./target/x86_64-pc-windows-msvc/release/servo.exe
            ./target/x86_64-pc-windows-msvc/release/components/**

      - name: ‚úÖ Build succeeded
        if: ${{ success() }}
        run: echo "Servo built successfully for Windows x64!"
